---
- name: Comware File Copying
  hosts: all
  gather_facts: no
  connection: local

  # The source files must exist and be readable for these tasks to succeed.
  tasks:
    # to flash
    - name: Delete file to prepare for copy
      comware_command:
        type: display
        command: 'delete smallfile'
        username: "{{ username }}"
        password: "{{ password }}"
        hostname: "{{ inventory_hostname }}"
      register: results
      tags: delete

    - name: Copy file using local relative path
      comware_file_copy:
        file: ../smallfile
        username: "{{ username }}"
        password: "{{ password }}"
        hostname: "{{ inventory_hostname }}"
      register: results

    - name: Verify file copy
      assert:
        that:
          - "results.source_file == '../smallfile'"
          - "results.destination_file == 'flash:/smallfile'"

    - name: Test idempotency with remote absolute path
      comware_file_copy:
        file: ../smallfile
        remote_path: flash:/smallfile
        username: "{{ username }}"
        password: "{{ password }}"
        hostname: "{{ inventory_hostname }}"
      register: results

    - name: Verify idempotent operation
      assert:
        that:
          - "results.source_file == '../smallfile'"
          - "results.destination_file == 'flash:/smallfile'"
          - "results.changed == false"

    - name: Clean up test file
      comware_command:
        type: display
        command: 'delete smallfile'
        username: "{{ username }}"
        password: "{{ password }}"
        hostname: "{{ inventory_hostname }}"
      register: results

    # to special directory
    - name: Prepare special directory by removing existing file
      comware_command:
        type: display
        command: 'delete flash:/test/myfile'
        username: "{{ username }}"
        password: "{{ password }}"
        hostname: "{{ inventory_hostname }}"
      register: results

    - name: Remove test directory
      comware_command:
        type: display
        command: 'rmdir flash:/test'
        username: "{{ username }}"
        password: "{{ password }}"
        hostname: "{{ inventory_hostname }}"
      register: results

    - name: Basic file copy - local relative path
      comware_file_copy: file=../smallfile remote_path=flash:/test/myfile username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
      register: results

    - assert:
          that:
          - "results.source_file == '../smallfile'"
          - "results.destination_file == 'flash:/test/myfile'"

    - name: Idempotency test - remote absolute path
      comware_file_copy: file=../smallfile remote_path=flash:/test/myfile username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
      register: results

    - assert:
          that:
          - "results.source_file == '../smallfile'"
          - "results.destination_file == 'flash:/test/myfile'"
          - "results.changed == false"

    - name: Delete file to cleanup
      comware_command: type=display command='delete flash:/test/myfile' username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
      register: results

    - name: Delete directory to cleanup
      comware_command: type=display command='rmdir flash:/test/' username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
      register: results

    # fail because file not found
    - name: Local file not found test
      comware_file_copy: file=../notfile remote_path=flash:/notfile username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
      register: results
      ignore_errors: true
      tags: nf

    - assert:
          that:
          - "results.failed == true"
      tags: nf

    # fail - file too big
    - name: File too big test
      comware_file_copy: file=../bigfile remote_path=flash:/bigfile username={{ username }} password={{ password }} hostname={{ inventory_hostname }}
      register: results
      ignore_errors: true
      tags: big

    - assert:
          that:
          - "results.failed == true"
      tags: big
